javascript modules:which is used to transfer from one js to another
-import/export statements
-import statements:to use an exported data from another js file
-export statements:used to expoert from one js file to another ,can be used in 2 different ways,
  -using export keyword:used to export multiple data from a single js file
  -using export default keyword: this keyword must be at the end of that file
React App is a collection of different libraries
react app consist of different component which is used to display contents on browser
all the components are arranged in tree structure.
tree structurehas a single parent / root node which is default known as APP component",components are reusable
-pure javascript function to build components,it will return how to diplay contents inbrowser.these functions are capable of doing single task with the help of arguments
-functions with no side effects
-declarative approach  
-Virtual Dom
    -lightweight  memory representation of real Dom
    -Babel librsary is used to display contents into browser
    -JSX (javascrpt XML): JS Extension for writing HTML code in javascript,which is used to diplay contents inn browser
    -JSX elemnts:ex:const heading = <h1>heading</h2>
    rules for suing JSX
    -Every JSX elemnt must be inside a single tag.Parent tag can be any Cpntainer tag(div,section,article etc) or react fragments(<> </>)tag without name
    -Every JSX Code must have a closing tag
    -if a tag has content then:
      -<startingtag> content </ending tags>
      if a tag has no content:<startingTag></closing tag>
      or we can use self closing tags(<startingTag/>)
    -Instaed of attribute "class" use "className" in JSX
    -Instaed of attribute "for" use "htmlFor" in JSX
    In JSx we can directly pass JSCODe inside  a curly braces eg : {jscode}  

    ------------------------------------------------------------------------------------------------------
    React App creation
    ------------------------------------------------------------------------------------------------------
    two ways to create react App 
    - CRA( using create-react-app command)
    -vite is a tool for building web applications
    -installing vite globally :npm i -g create-vite
    -REact App creation using vite:npm create vite@latest reactAPPname -- -- template react
    Files and folder structure of react app using vite
    -Package.json file : npm configuration file for the project
    -package-lock.json file: used to control version of dependent package of the project.
    -eslint.config.js - JS configuraton files
    -node_modules folder : used to locally store dependent packages of project,we can generate node_modules folder with the help of command npm install/npm i
    Public folder is used to hold data that can be accessed by any part of the project\
    -index.html:entry point of react applications
    -src folder :logic of react app is defined here
      -main.jsx:used to render 9displaying in browser) react app in html element with id as root
      -strict Mode is used to double check the file for any bugs
      types of import statements:
      import with curly braces:if data exported using export keyword
      import without curly braces :if data is exported using export default
      {}  in import is used to fetch a single entity from a file

      -createRoot():create a root to display react components inside a browser DOM node.
      -css file: used to define style for all components in react app

      reconcillation 

      App.jsx:used to create react root component
      asset folder is used to hold media files used in react project

Components:which is used to diplay contents in browser,used to create component create a jsx/js file with filename staring capital letter
  -create components in two ways,
    -Function based components: uses js pure function to build components,Function name must be similar to its file name.it must return jsx code
    class/stateful based components: uses class to create components class inherit react compnnents
    Data sharing between react components -data can be transfered from parent to child:use "props" Object
    Props:Is a Property of a component.it is an Object used to transfer data from parent to child,parent data can be shared  via child tag attribute.
    to acces  parent data in child use props as an argument in child component function
   -life cycle  methods of react component
   - Mounting phase :Putting jsx into DOM
    - constructor()
    - getDerivedStateFromProps()
    - render()
    -componentDidMount()
   -Updating phase : when component get updated
    -getDerivedStateFromProps()
    - getSnapShotBeforeUpdate()
    - shouldComponentUpdate()-return boolean value
    - render()
    -componentDidUpdate()
   - unmounting phase: removing component from DOM 
   
   class based component                    function based component
   --------------------------              -----------------------------
   1.using class to create,render method      1.using Js pure functions and returnjsx
   must return jsx                          jsx
   2.stateful component                       2.stateless component
   3.Hooks are not used                      3. hooks are used
   4.constructor are used for initialization    4.No need of constructor
   5. life cycle components are available       5.life cycle methods are not available
    how can we apply conditional statements
    conditional rendering:used based on condition rendering jsx elements in browser,using if-else,ternary operator(?:)/if statement
    List in React:use map array method.set a key attribute to duplicating jsx element in a List
    css styling in react:
    -inline Css:use style attribute to apply style to jsx elemnt,style must be as js Object
    syntax:style={{css-property}}
    -External Css:Define Css style in an external css file and link csss file to component file using import statement
    we cannot import css file into a variable in component file
    syntax:
    import "css-file-path"


    - using CSS module files:File with extension .module.css is known as Css 'module file'  in this we have to define style in class. To use module css file we have to import it into the component filesyntax:import variableName from 'modulecss file path',top aplly components ,use variableName.classNme

    Event Handling in React:Syntax:event ={function Call}
    -Binding functions  without argument : event ={functionName}
    -Binding Functions With Argument:event= {()=>function(arg)}
    -Binding function with arguments as event : event ={(event)=>function(event)}
    state in React : Used to store data of a component , when a state value change component will rerender
    Hooks in react: predefined methods in react .used to provide react component features to function based component.
    to use a hook in a functional component ,it has to be call the hook:
    -rules to call hooks in functional component
      - import hook in component from react
      - to use hook in component call the hook in top level of component.
      - Hooks cannot be conditional
    - Based on react feature there are different types of hooks are available
    - Built in Hooks
    -useState(Initial-value) hook: used to create state in functional component,this hook will return array of 2 arguments.First argument is a state,second argument is a function name used to update state.
    state updating function name must start with 'set'
   -useEffect(callbackfn,dependency):used to apply side effects to a functional component,we can pass side effect as its first argument as call back function and we can also an optional dependency argument to decide when to spply side effects in component
    -useRef(initial value): is a react hook that lets you reference a value that's not needed for rendering.Initial value is optional,it returns an object
    -custom hooks
    life cycle
    

    Form Handling in React : There areb  two different ways to manage  data inside the form by a  component 
    -controlled Components: are componets which store data inside its won state
    -Uncontrolled Components: Components who acess form data using its Dom element reference

    React Bootstrap
    install react Bootstrap in your project using npm install react-bootstrap bootstrap command
    choose a theme in order to apply bootstrap property in react project ,we can get theme from bootswatch
    download theme from bootswatch 

    set up path/URL  for react component:use package react-router-dom
    install react-router-dom: npm i react-router-dom
    -steps:
    -Render the entire react App inside "BrowserRouter" component of react-router-dom library,provide this in main.jsx
    -Inorder to set up path for component,make each component must be inside "Routes" component of react-router-dom library,provide this step inside App.jsx file
    -To set up Path for an component has attribute like "Path" and "element" in order to set up routes for component .All Route Component must be inside Routes component
    Higher Order Component(HOC): are components whose props arguments will give another component ,eg:Route Component






    ---------------Json server creation-----------------------------------------
    create a server folder to store json file
    create  a package.json (npm configuration file) file inside server folder:use command: npm init -y
    install json server package in server folder to run json filr,use command to install json server : npm i json server
    create json (db.json) file for storing project data
    use (npx json-server db.json) command to run json file and available in browser port(run this npx json-server db.json in serverfolder)






    ------------API call using axios libraries-------------

    Axios is a promise based http client for node.js and the browser

    Axios call in react : install axios using npm install axios
    to make http request using axios:axios(config)
    -config:is an predefined object with keys :(method,url,data,headers)
    -http response using axios will always return object with predefined keys(data(server response),status,statusText)
    -create services folder inside src of your react app




    ---------state uplifting----------------
    data sharing between components in react 
    data sharing is using props.we will create state in common parent of adata to be shared components.share state updation function one componet and state to another component



    JSON SERVER DEPLOYMENT
1.create a index.js file inside server folder
     stable version of json server use:npm i json-server@0.17.4 to install
2.update scripts key of package,json file with{"start": "node index.js" } and remove test key from it    
3.create .gitignore file, to node_modules inside it
4.define steps to run db.json file using json-server in index.js
  - import json-server 
  - create a server for media player app in order ro run our server app
  -create a middle ware to convert json data to js
  -create a port for executing our app
  _setup a path/route db.json file so that client can make the request
  -use the middle ware , route inside the server
  -run the server suing given port
  -to execute our app we have to use: node index.js in terminal,so that we can see the output in localhost:3000



  Redux 
  (providet,useDispatch,useSelector - hooks in react)
  it is a state management js library used in react prjoects
  import react-redux and redux toolkit
  -store: configureStore()
  -reducers: hold updated state
  -action :logic to update state and its output automatically go to reducers


  redux is a js library for predictable and maintainable for global state management
  redux consist of 2 packages
  1.react redux npm install react-redux
  2.react toolkit npm install @reduxjs/toolkit

  Important API used in redux:
  -configureStore(): used to create store for redux
  -steps to create redux store in react-create a folder redux logic in src folder
  inside redux folder create a js file for creating redux store
  to provide store to our react app use provider component of react redux library provider component has store attribute using we can provide  orstore to react app.inorder  to do that make provider component as the root component of our react app.give thse steps in main.jsx
  -createReducer():used to create reducers where we can store updated state inside store
  -createAction():used to create action where we can define the lof=gic to update state,output of action automatically return to its reducers
  -createSlice():used to combine action and reducer in a single js file
  steps to use slice for react app
  create a js file for defining slice


  Hooks used in component for managing redux 
  useSelector(state=>state.reducer_name):used to select state from store in a component
  useDispatch():used to execute an action from a component. Hook will return a functom that is capable of dispatching an actiom as its argument when we call the function
  -actions without argument:dispatch-function(action-name())
  -action with argument;dispatch-function(action-name(arg1...)),access argument of action in slice reduce function it uses its second argument which is an object with 2 keys payload and type.payload will give the argument from action dispatched by the component

  Dynamic routing: we can set up a dynamic /changing value in a url along: symbol,so react app will understand the value along with a  : is a dynamic part of this url
  to set up page not found url as path /*


  useParam():hook that will 